from aiogram import types, F, Router
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
from keyboards.keyboard import * 
from database.db import add_user
import html, aiosqlite

router = Router()

@router.message(CommandStart())
async def menu_handler(message: types.Message) -> None:
    await add_user(message.from_user.id, message.from_user.full_name, message.from_user.username)
    await message.answer(f'<b>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é {html.escape(message.from_user.full_name)}!</b>\n\n<i>–ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ —Å –Ω–∞–º–∏, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏ –∏ —Å–æ–≤–µ—Ç–∞–º–∏ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—èüëá</i>\n\n- –ó–∞–∫–∞–∑—ã –ø–æ –≥–æ—Ä–æ–¥—É —Å—Ç–æ—è—Ç 250 —Ä—É–±–ª–µ–π\n- –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º –±–æ—Ç–æ–º –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n- –ß—Ç–æ–±—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–∫–∞–∑—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.', reply_markup=keyboard)    

@router.message(F.text == 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')
async def back_handler(message: types.Message, state: FSMContext) -> None:
    await state.clear()
    await menu_handler(message)

@router.message(F.text == 'üö´ –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑')
async def cancel_handler(message: types.Message, state: FSMContext) -> None:
    user_id = message.from_user.id
    connect = await aiosqlite.connect(r'C:\PYTHONP\NubiraTaxi\database\database.db')
    cursor = await connect.cursor()
    cancel_app_num = await cursor.execute('SELECT cancel_applic FROM clients WHERE user_id = ?', (user_id,))
    cancel_app_num = await cursor.fetchone()
    cancel_app_num = cancel_app_num[0] + 1
    await cursor.execute('UPDATE clients SET cancel_applic = ? WHERE user_id = ?', (cancel_app_num, user_id))
    await connect.commit()
    await state.clear()
    await message.answer('–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω...')
    await cursor.close()
    await connect.close()
    await menu_handler(message)

@router.message(F.text == 'üì± –û –Ω–∞—Å')
async def about_handler(message: types.Message) -> None:
    await message.answer('–ú—ã —Å–æ–∑–¥–∞–ª–∏ —Ç–∞–∫—Å–∏ –¥–ª—è –≤–∞—Å –ø—Ä—è–º–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ! –¢–µ–ø–µ—Ä—å –≤–∞–º –±—É–¥–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —É–¥–æ–±–Ω–æ –µ–∑–¥–∏—Ç—å –≤ –≤–∞—à–∏–µ –ª—é–±–∏–º—ã–µ –º–µ—Å—Ç–∞, –Ω–æ –∏ –≤—ã–≥–æ–¥–Ω–æ! –£ –Ω–∞—Å, —Ü–µ–Ω—ã –Ω–∞–º–Ω–æ–≥–æ –Ω–∏–∂–µ —á–µ–º —É –¥—Ä—É–≥–∏—Ö —Ç–∞–∫—Å–∏-–∫–æ–º–ø–∞–Ω–∏–π.–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞–º–∏ –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª–µ!\n\n<b>–ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫!</b>', reply_markup=canal_keyboard)

