import aiosqlite
from aiogram import types, F, Router
from keyboards.keyboard import * 
from aiogram.types import TelegramObject
#from main import router
from aiogram.filters import BaseFilter

router = Router()

drivers_ids = [2117761461, 2090971605]

class IsDriver(BaseFilter):
    async def __call__(self, obj: TelegramObject) -> bool:
        return obj.from_user.id in drivers_ids

@router.message(F.text == 'üöï –î–ª—è –≤–æ–¥–∏—Ç–µ–ª–µ–π')
async def for_driver(message: types.Message) -> None:
    await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–∞–Ω–µ–ª—å –≤–æ–¥–∏—Ç–µ–ª—è!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –Ω–∏–∂–µ', reply_markup=driver_keyboard)

@router.message(F.text == '‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑')
async def stop_app(message: types.Message) -> None:
    await message.answer('–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!')
    await application_handler()

@router.message(F.text == 'üöÄ –†–∞–±–æ—Ç–∞', IsDriver())
async def application_handler(message: types.Message) -> None:
    global user_id_driver
    global drive_chat_id
    drive_chat_id = message.chat.id
    user_id_driver = message.from_user.id
    connect = await aiosqlite.connect(r'C:\PYTHONP\NubiraTaxi\database\database.db')
    cursor = await connect.cursor()
    summa_driver = await cursor.execute('SELECT money FROM drivers WHERE user_id = ?', (user_id_driver,))
    summa_driver = await summa_driver.fetchone()
    if summa_driver and summa_driver[0] > 40:
        await cursor.execute('UPDATE drivers SET isWorking = 1 WHERE user_id = ?', (user_id_driver,))
        await connect.commit()
        await message.answer('–ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å—é–¥–∞\n\n<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–∫–∞–∑—ã:</b>\n\n', reply_markup=stop_work_keyboard)
    else: 
        await message.answer('–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤!\n\n–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ...')
        await cursor.close()
        await connect.close()

@router.message(F.text == '‚õî –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å —Ä–∞–±–æ—Ç—É', IsDriver())
async def stop_work_handler(message: types.Message) -> None:
    user_id = message.from_user.id
    connect = await aiosqlite.connect(r'C:\PYTHONP\NubiraTaxi\database\database.db')
    cursor = await connect.cursor()
    await cursor.execute('UPDATE drivers SET isWorking = 0 WHERE user_id = ?', (user_id,))
    await connect.commit()
    await cursor.close()
    await connect.close()
    await message.answer(f'–†–∞–±–æ—Ç–∞ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∞\n\n<i>–ù–∞–∂–º–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é</i>', reply_markup=back_keyboard)

@router.message(F.text == 'üöï –°—Ç–∞—Ç—å –≤–æ–¥–∏—Ç–µ–ª–µ–º')
async def caution_reg(message: types.Message) -> None:
    await message.answer('üöï <b>–°—Ç–∞—Ç—å –≤–æ–¥–∏—Ç–µ–ª–µ–º</b>\n\n–î–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã –≤—ã –¥–æ–ª–∂–Ω—ã:\n‚ûñ–ë—ã—Ç—å —Å—Ç–∞—Ä—à–µ 18 –ª–µ—Ç\n‚ûñ–ò–º–µ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏\n‚ûñ–°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–∞–≤ –∏ —Ç–µ—Ö–ø–∞—Å–ø–æ—Ä—Ç–∞\n‚ûñ–°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –º–∞—à–∏–Ω—ã —Å–ø–µ—Ä–µ–¥–∏ —Å –Ω–æ–º–µ—Ä–æ–º\n\n‚ö†Ô∏è –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ!\n\n–ï—Å–ª–∏ –≤—ã –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–æ–ø–∫—É –Ω–∏–∂–µ', reply_markup=reg_keyboard)

